{
  "userManagement": {
    "home": {
      "title": "Utenti"
    },
    "created": "\u00C8 stato creato un nuovo utente con identificatore {{ param }}",
    "updated": "Sono stato aggiornati i dati dell'utente con identificatore {{ param }}",
    "deleted": "\u00C8 stato eliminato l'utente con identificatore {{ param }}",
    "reset": "\u00c8 stato inviato un link di reset password all'indirizzo email {{ param }}",
    "delete": {
      "question": "Si \u00E8 sicuri di volere eliminare l'utente {{ login }}?"
    },
    "login": "Login",
    "firstName": "Nome",
    "lastName": "Cognome",
    "email": "Email",
    "group": "Gruppo",
    "state": "Stato",
    "langKey": "Lingua",
    "groupName": "Gruppo",
    "createdDate": "Creato il",
    "createdBy": "Creato da",
    "lastModifiedBy": "Modificato da",
    "lastModifiedDate": "Modificato il",
    "isBlocked": "Utenza bloccata",
    "isDeleted": "Utenza cancellata",
    "authenticationType": "Tipo Accesso",
    "detail": {
      "title": "Dettaglio Utente",
      "updateLabel": "Modifica Utente"
    },
    "lista": {
      "createLabel": "Nuovo Utente"
    },
    "update": {
      "create.title": "Creazione utente",
      "modify.title": "Modifica utente"
    },
    "resetPassword": {
      "title": "Conferma reset password",
      "question": "Si \u00e8 sicuri di volere inviare il link di reset password per l'utente {{ login }}?"
    },
    "changeState": {
      "question": {
        "title": "Cambia Stato",
        "message": "Sei sicuro di voler cambiare lo stato dell'utente?"
      }
    }
  },
  "error": {
    "userManagement": {
      "notExists": "Utente non presente",
      "userAlreadyExist": "Utente esistente",
      "isTheSameLoggedUser": "L'utente selezionato coincide con l'utente loggato: operazione non ammessa",
      "statoNotValid": "Stato utente incompatibile con l'operazione richiesta",
      "permissionDenied": "Permesso negato per l'utente selezionato"
    }
  },
  "pagopaCruscottoBackendApp": {
    "authUserCreateRequestBean": {
      "login": {
        "NotBlank": "Il campo 'Login' \u00E8 obbligatorio",
        "Pattern": "Il campo 'Login' pu\u00F2 contenere solo lettere, cifre e indirizzi e-mail",
        "Size": "Il campo 'Login' non pu\u00F2 contenere più di 50 caratteri"
      },
      "firstName": {
        "NotBlank": "Il campo 'Nome' \u00E8 obbligatorio",
        "Size": "Il campo 'Nome' non pu\u00F2 contenere più di 50 caratteri"
      },
      "lastName": {
        "NotBlank": "Il campo 'Cognome' \u00E8 obbligatorio",
        "Size": "Il campo 'Cognome' non pu\u00F2 contenere più di 50 caratteri"
      },
      "email": {
        "Email": "Il campo 'Email' deve essere una e-mail valida",
        "Size": "Il campo 'Email' deve contenere minimo 5 caratteri e massimo 254 caratteri"
      },
      "langKey": {
        "Size": "Il campo 'Lingua' deve contenere minimo 2 caratteri e massimo 10 caratteri"
      },
      "groupId": {
        "NotNull": "Il campo 'Gruppo' \u00E8 obbligatorio",
        "Digits": "Il campo 'Gruppo' deve essere un numero intero positivo",
        "ValidAuthGroup": "Il Gruppo 'Login' deve essere un gruppo esistente"
      }
    }
  },
  "AuthUserUpdateRequestBean": {
    "id": {
      "NotNull": "Il campo 'Id' \u00E8 obbligatorio",
      "Digits": "Il campo 'Id' deve essere un numero intero positivo"
    },
    "firstName": {
      "NotBlank": "Il campo 'Nome' \u00E8 obbligatorio",
      "Size": "Il campo 'Nome' non pu\u00F2 contenere più di 50 caratteri"
    },
    "lastName": {
      "NotBlank": "Il campo 'Cognome' \u00E8 obbligatorio",
      "Size": "Il campo 'Cognome' non pu\u00F2 contenere più di 50 caratteri"
    },
    "email": {
      "Email": "Il campo 'Email' deve essere una e-mail valida",
      "Size": "Il campo 'Email' deve contenere minimo 5 caratteri e massimo 254 caratteri"
    },
    "langKey": {
      "Size": "Il campo 'Lingua' deve contenere minimo 2 caratteri e massimo 10 caratteri"
    },
    "groupId": {
      "NotNull": "Il campo 'Gruppo' \u00E8 obbligatorio",
      "Digits": "Il campo 'Gruppo' deve essere un numero intero positivo",
      "ValidAuthGroup": "Il Gruppo 'Login' deve essere un gruppo esistente"
    }
  }
}
